@model CFPPE.Models.usuario

@{
    ViewBag.Title = "Edit";
}



    <h2>CambioDP</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>usuario</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.idUsuario)

            @*<div class="form-group">
                @Html.Label("* Cambio de foto de perfil", htmlAttributes: new { @class = "control-label col-md-10", @color = "yellow" })
                <div class="col-md-8">*@
                    @*@Html.EditorFor(model => model.Foto, new { htmlAttributes = new { @class = "form-control",@type="file", @onchange = "comprueba_extension('file')" } })*@
                    @*<input type="file" name="file" id="file" onchange="comprueba_extension('file')" required style="color:gold" />
                    @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "is-untouched is-pristine av-invalid form-control", @value = "", @placeholder = "* Nombre", @required = "true", @maxlength = "30", @onchange = "ValidarNomDesc(this.value, this.id)", @onkeypress = "return calle(event)", @style = "color:gold" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.APP, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.APP, new { htmlAttributes = new { @class = "is-untouched is-pristine av-invalid form-control", @value = "" } })
                    @Html.ValidationMessageFor(model => model.APP, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.APM, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.APM, new { htmlAttributes = new { @class = "is-untouched is-pristine av-invalid form-control", @value = "" } })
                    @Html.ValidationMessageFor(model => model.APM, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "is-untouched is-pristine av-invalid form-control", @value = "" } })
                    @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "is-untouched is-pristine av-invalid form-control", @value = "" } })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "is-untouched is-pristine av-invalid form-control", @value = "" } })
                    @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contraseña, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contraseña, new { htmlAttributes = new { @class = "is-untouched is-pristine av-invalid form-control", @value = "" } })
                    @Html.ValidationMessageFor(model => model.Contraseña, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "is-untouched is-pristine av-invalid form-control", @value = "" } })
                    @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.idUsuario, "idUsuario", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("idUsuario", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.idUsuario, "", new { @class = "text-danger" })
                    </div>
                </div>*@
            <br />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

