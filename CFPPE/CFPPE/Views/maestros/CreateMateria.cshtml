@model CFPPE.Models.materia

@{
    ViewBag.Title = "CreateMateria";
}

<h2>CreateMateria</h2>


@using (Html.BeginForm()) 
{

    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>materia</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="form-group">
            @Html.LabelFor(model => model.idSeccion, "idSeccion", htmlAttributes: new { @class = "col-xs-8 col-sm-6" })
            <div class="col-md-10">
                @Html.DropDownList("idSeccion", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idSeccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idMaestro, "idMaestro", htmlAttributes: new { @class = "col-xs-4 col-sm-6" })
            <div class="col-md-10">
                @Html.DropDownList("idMaestro", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idMaestro, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="row">

        <div class="form-group">
            @Html.LabelFor(model => model.Materia1, htmlAttributes: new { @class = "col-xs-8 col-sm-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Materia1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Materia1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodigoM, htmlAttributes: new { @class = "col-xs-4 col-sm-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodigoM, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodigoM, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="row">

        <div class="form-group">
            @Html.LabelFor(model => model.FechaIN, htmlAttributes: new { @class = "col-xs-8 col-sm-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaIN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaFI, htmlAttributes: new { @class = "col-xs-4 col-sm-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaFI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaFI, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "col-xs-8 col-sm-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "col-xs-4 col-sm-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">

        <div class="form-group">
            @Html.LabelFor(model => model.Grado, htmlAttributes: new { @class = "col-xs-8 col-sm-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Grupo, htmlAttributes: new { @class = "col-xs-4 col-sm-6" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grupo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grupo, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="row">

        <div class="form-group">
            @Html.LabelFor(model => model.idTipoMateria, "idTipoMateria", htmlAttributes: new { @class = "col-xs-8 col-sm-6" })
            <div class="col-md-10">
                @Html.DropDownList("idTipoMateria", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idTipoMateria, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
